/////slidig window/////
vector<int> subarraySum(int arr[], int n, long long s)
    {
        // Your code here
        long long sum=0;
        unordered_map<long long,int>mp;
        vector<int>ans;
        int left=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            while(sum>s && left<=i){
                sum=sum-arr[left];
                left++;
            }
            if(sum==s && left<=i){
                ans.push_back(left+1);
                ans.push_back(i+1);
                break;
            }
            //mp[sum]=i;
        }
        if(ans.size()==0)ans.push_back(-1);
        return ans;
    }
    
   ////// using map ///////// 
    vector<int> subarraySum(int arr[], int n, long long s)
    {
        // Your code here
        long long sum=0;
        unordered_map<long long,int>mp;
        vector<int>ans;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            if(sum==s){
                ans.push_back(1);
                ans.push_back(i+1);
                break;
            }
            else if(mp.find(sum-s)!=mp.end()) {
                ans.push_back(mp[sum-s]+2);
                ans.push_back(i+1);
                break;
            }
            mp[sum]=i;
        }
        if(ans.size()==0)ans.push_back(-1);
        return ans;
    }
