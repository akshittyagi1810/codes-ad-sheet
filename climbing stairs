You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
class Solution {
public:
    int climbStairs(int n) {
    
        //method 1 //gives tle
    
        if(n==1) return 1;
        if(n==2) return 2;
        return climbStairs(n-1) + climbStairs(n-2);
        
        //method 2 // using fibonacci series
        
        vector<int>v;
        v.push_back(0);
        v.push_back(1);
        v.push_back(2);
        
        for(int i=3;i<n+1;i++){
            v.push_back(v[i-1]+v[i-2]);
        }
        return v[n];
    }
};
