N = 9, K = 3
arr[] = 1 2 3 1 4 5 2 3 6
Output: 
3 3 4 5 5 5 6 


class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        deque<int>q;
        for(int i=0;i<k;i++){
            while(!q.empty() && q.back()<arr[i]) q.pop_back();
           q.push_back(arr[i]);
        }
        vector <int> v;
        //auto it=q.end();it--;
        v.push_back(q.front());
        for(int i=k;i<n;i++){
            if(arr[i-k]==q.front()){
                q.pop_front();
            }
            while(!q.empty() && q.back()<arr[i]) q.pop_back();
            q.push_back(arr[i]); 
            v.push_back(q.front()); 
        }
        return v;
    }
};
